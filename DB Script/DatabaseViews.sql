--Create a view to display all active courses, including category, instructor name, and total enrollments
create view active_course_info
As 
select c.Title , li.name as category,(i.FName+' '+i.LName) as [instructor name] ,count(*) as [total enrollments]
from  courses c 
join Lockups_item li on c.category_id=li.item_id
join Instructors i on c.instructor_id=i.instructors_id
join learner_courses lc on c.course_id=lc.courses_id
where c.IsActive=1
group by c.Title,li.name,i.FName,i.LName

--query the view
select * from active_course_info

--Implement a view to show progress for all learners, including course details and completion percentages.
create view learner_progress
as 
select (l.FName+' '+l.LName)as learner_name,c.Title as course_name ,concat(avg(case when lesson_status=42 then 1.0 else 0 end) *100 ,'%') as [completion percentages]
from learner_lesson_progress llp
join recorded_lessons rl on llp.lesson_id =rl.lesson_id 
join courses c on rl.courses_id=c.course_id
join Learners l on llp.learner_id=l.learner_id
group by rl.courses_id,llp.learner_id,c.Title,l.FName,l.LName

--query the view
select * from learner_progress

-- Create a view summarizing revenue generated by each course, instructor, and overall platform
create view summarizing_revenue
as
select c.course_id,c.Title,instructor_id,(i.FName+' ' +i.LName) instructor_name ,sum(case when  lc.price is null then 0 else  lc.price end ) as course_revenue ,(select sum(lc.price) from learner_courses lc)  total_platform_revenue
from courses c
left join Instructors i on c.instructor_id=i.instructors_id
left join learner_courses lc on c.course_id=lc.courses_id
group by  c.course_id,c.Title,instructor_id,i.FName,i.LName

--query the view
select * from summarizing_revenue

